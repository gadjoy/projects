{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createCommentVNode as _createCommentVNode } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"h1\", null, \"Freelancer API Interaction\", -1 /* HOISTED */);\nconst _hoisted_2 = {\n  key: 0\n};\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"h2\", null, \"Projects\", -1 /* HOISTED */);\nconst _hoisted_4 = {\n  key: 1\n};\nconst _hoisted_5 = /*#__PURE__*/_createElementVNode(\"h2\", null, \"Single Project\", -1 /* HOISTED */);\nconst _hoisted_6 = {\n  key: 2\n};\nconst _hoisted_7 = /*#__PURE__*/_createElementVNode(\"h2\", null, \"Bid Response\", -1 /* HOISTED */);\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_hoisted_1, _createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = (...args) => $options.fetchProjects && $options.fetchProjects(...args))\n  }, \"Fetch Projects\"), _createElementVNode(\"button\", {\n    onClick: _cache[1] || (_cache[1] = (...args) => $options.fetchSingleProject && $options.fetchSingleProject(...args))\n  }, \"Fetch Single Project\"), _createElementVNode(\"button\", {\n    onClick: _cache[2] || (_cache[2] = (...args) => $options.placeBid && $options.placeBid(...args))\n  }, \"Place Bid\"), $data.projects ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, [_hoisted_3, _createElementVNode(\"ul\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.projects, project => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: project.id\n    }, _toDisplayString(project.name), 1 /* TEXT */);\n  }), 128 /* KEYED_FRAGMENT */))])])) : _createCommentVNode(\"v-if\", true), $data.singleProject ? (_openBlock(), _createElementBlock(\"div\", _hoisted_4, [_hoisted_5, _createElementVNode(\"p\", null, _toDisplayString($data.singleProject), 1 /* TEXT */)])) : _createCommentVNode(\"v-if\", true), $data.bidResponse ? (_openBlock(), _createElementBlock(\"div\", _hoisted_6, [_hoisted_7, _createElementVNode(\"p\", null, _toDisplayString($data.bidResponse), 1 /* TEXT */)])) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"names":["_createElementVNode","key","_createElementBlock","_hoisted_1","onClick","_cache","args","$options","fetchProjects","fetchSingleProject","placeBid","$data","projects","_hoisted_2","_hoisted_3","_Fragment","_renderList","project","id","name","_createCommentVNode","singleProject","_hoisted_4","_hoisted_5","_toDisplayString","bidResponse","_hoisted_6","_hoisted_7"],"sources":["/home/waseem/project/freelancer_bidding_automation/client-/src/App.vue"],"sourcesContent":["<template>\n  <div>\n    <h1>Freelancer API Interaction</h1>\n    <button @click=\"fetchProjects\">Fetch Projects</button>\n    <button @click=\"fetchSingleProject\">Fetch Single Project</button>\n    <button @click=\"placeBid\">Place Bid</button>\n    <div v-if=\"projects\">\n      <h2>Projects</h2>\n      <ul>\n        <li v-for=\"project in projects\" :key=\"project.id\">\n          {{ project.name }}\n        </li>\n      </ul>\n    </div>\n    <div v-if=\"singleProject\">\n      <h2>Single Project</h2>\n      <p>{{ singleProject }}</p>\n    </div>\n    <div v-if=\"bidResponse\">\n      <h2>Bid Response</h2>\n      <p>{{ bidResponse }}</p>\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios';\n\nexport default {\n  data() {\n    return {\n      projects: null,\n      singleProject: null,\n      bidResponse: null\n    };\n  },\n  methods: {\n    async fetchProjects() {\n      try {\n        const response = await axios.get('/fetch_projects');\n        this.projects = response.data;\n      } catch (error) {\n        console.error('Error fetching projects:', error);\n      }\n    },\n    async fetchSingleProject() {\n      try {\n        const response = await axios.get('/fetch_single_project');\n        this.singleProject = response.data;\n      } catch (error) {\n        console.error('Error fetching single project:', error);\n      }\n    },\n    async placeBid() {\n      try {\n        const response = await axios.get('/place_bid');\n        this.bidResponse = response.data;\n      } catch (error) {\n        console.error('Error placing bid:', error);\n      }\n    }\n  }\n};\n</script>\n"],"mappings":";gCAEIA,mBAAA,CAAmC,YAA/B,4BAA0B;;EAFlCC,GAAA;AAAA;gCAOMD,mBAAA,CAAiB,YAAb,UAAQ;;EAPlBC,GAAA;AAAA;gCAeMD,mBAAA,CAAuB,YAAnB,gBAAc;;EAfxBC,GAAA;AAAA;gCAmBMD,mBAAA,CAAqB,YAAjB,cAAY;;uBAlBpBE,mBAAA,CAqBM,cApBJC,UAAmC,EACnCH,mBAAA,CAAsD;IAA7CI,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAC,aAAA,IAAAD,QAAA,CAAAC,aAAA,IAAAF,IAAA,CAAa;KAAE,gBAAc,GAC7CN,mBAAA,CAAiE;IAAxDI,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAE,kBAAA,IAAAF,QAAA,CAAAE,kBAAA,IAAAH,IAAA,CAAkB;KAAE,sBAAoB,GACxDN,mBAAA,CAA4C;IAAnCI,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAG,QAAA,IAAAH,QAAA,CAAAG,QAAA,IAAAJ,IAAA,CAAQ;KAAE,WAAS,GACxBK,KAAA,CAAAC,QAAQ,I,cAAnBV,mBAAA,CAOM,OAbVW,UAAA,GAOMC,UAAiB,EACjBd,mBAAA,CAIK,c,kBAHHE,mBAAA,CAEKa,SAAA,QAXbC,WAAA,CAS8BL,KAAA,CAAAC,QAAQ,EAAnBK,OAAO;yBAAlBf,mBAAA,CAEK;MAF4BD,GAAG,EAAEgB,OAAO,CAACC;wBACzCD,OAAO,CAACE,IAAI;wCAVzBC,mBAAA,gBAceT,KAAA,CAAAU,aAAa,I,cAAxBnB,mBAAA,CAGM,OAjBVoB,UAAA,GAeMC,UAAuB,EACvBvB,mBAAA,CAA0B,WAAAwB,gBAAA,CAApBb,KAAA,CAAAU,aAAa,iB,KAhBzBD,mBAAA,gBAkBeT,KAAA,CAAAc,WAAW,I,cAAtBvB,mBAAA,CAGM,OArBVwB,UAAA,GAmBMC,UAAqB,EACrB3B,mBAAA,CAAwB,WAAAwB,gBAAA,CAAlBb,KAAA,CAAAc,WAAW,iB,KApBvBL,mBAAA,e"},"metadata":{},"sourceType":"module","externalDependencies":[]}