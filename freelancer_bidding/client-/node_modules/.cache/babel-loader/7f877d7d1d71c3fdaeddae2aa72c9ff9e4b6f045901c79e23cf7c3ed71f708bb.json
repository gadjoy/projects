{"ast":null,"code":"import axios from 'axios';\nexport default {\n  data() {\n    return {\n      query: '',\n      searchLimit: '',\n      projects: [],\n      selectedProjects: [],\n      bidAmounts: {},\n      backendUrl: 'http://localhost:5000/api/projects',\n      preview: null,\n      loading: false,\n      projectHeaders: ['_id', '_title', '_budget_minimum', '_budget_maximum', '_type', '_bidperiod', '_time_submitted', '_bid_stats_bid_count', '_bid_stats_bid_avg', '_currency_code', '_currency_exchange_rate', '_proposal', '_full_description'] // Adjust with actual headers\n    };\n  },\n  methods: {\n    async fetchProjects() {\n      try {\n        this.loading = true;\n        const response = await axios.get(this.backendUrl, {\n          params: {\n            query: this.query,\n            limit: this.searchLimit\n          },\n          withCredentials: true\n        });\n        this.projects = response.data.projects_with_proposals;\n        console.log('Projects with proposals:', this.projects); // Log received data\n      } catch (error) {\n        console.error('Error fetching projects:', error);\n      } finally {\n        this.loading = false;\n      }\n    },\n    previewBid() {\n      if (this.selectedProjects.length === 0) {\n        this.preview = 'No projects selected.';\n        return;\n      }\n      this.preview = {};\n      this.selectedProjects.forEach(projectId => {\n        const project = this.projects.find(p => p._id === projectId);\n        const bidAmount = this.bidAmounts[projectId] || 'Not specified';\n        this.projectHeaders.forEach(header => {\n          this.preview[header] = project[header] || 'Not available';\n        });\n        this.preview.bidAmount = bidAmount;\n      });\n    },\n    submitBid() {\n      console.log('Submitting bids:', this.selectedProjects, this.bidAmounts);\n      // You can add logic here to send bid details to the backend\n    }\n  }\n};","map":{"version":3,"names":["axios","data","query","searchLimit","projects","selectedProjects","bidAmounts","backendUrl","preview","loading","projectHeaders","methods","fetchProjects","response","get","params","limit","withCredentials","projects_with_proposals","console","log","error","previewBid","length","forEach","projectId","project","find","p","_id","bidAmount","header","submitBid"],"sources":["/home/waseem/project/freelancer_bidding_automation/client-/src/App.vue"],"sourcesContent":["<template>\n  <div>\n    <h1>FREELANCER AUTO BIDDING</h1>\n\n    <div>\n      <label for=\"query\">Query:</label>\n      <input v-model=\"query\" type=\"text\" id=\"query\" />\n      <label for=\"searchLimit\">Search Limit:</label>\n      <input v-model.number=\"searchLimit\" type=\"number\" id=\"searchLimit\" />\n      <button @click=\"fetchProjects\" :disabled=\"loading\">Search</button>\n      <div v-if=\"loading\" class=\"spinner-container\">\n        <div class=\"spinner\"></div>\n      </div>\n    </div>\n\n    <div v-if=\"projects.length > 0\">\n      <table>\n        <thead>\n          <tr>\n            <th>Select</th>\n            <th v-for=\"header in projectHeaders\" :key=\"header\">{{ header }}</th>\n            <th>Bid Amount</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr v-for=\"project in projects\" :key=\"project._id\">\n            <td>\n              <input type=\"checkbox\" v-model=\"selectedProjects\" :value=\"project._id\" />\n            </td>\n            <td v-for=\"header in projectHeaders\" :key=\"header\">\n              {{ header !== '_proposal' && header !== '_full_description' ? project[header] || 'Not available' : '' }}\n            </td>\n            <td>\n              <input v-model=\"bidAmounts[project._id]\" type=\"number\" />\n            </td>\n          </tr>\n        </tbody>\n\n      </table>\n\n      <div>\n        <button @click=\"previewBid\">Preview</button>\n        <button @click=\"submitBid\">Submit</button>\n      </div>\n\n      <!-- Display Preview -->\n      <div v-if=\"preview\">\n        <h2>Preview:</h2>\n        <div v-for=\"(header, index) in projectHeaders\" :key=\"index\">\n          <p v-if=\"header !== '_proposal'\">{{ header === '_full_description' ? 'Title' : header }}: {{ preview[header] || 'Not available' }}</p>\n        </div>\n        <p>Bid Amount: {{ preview.bidAmount || 'Not specified' }}</p>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios';\n\nexport default {\n  data() {\n    return {\n      query: '',\n      searchLimit: '',\n      projects: [],\n      selectedProjects: [],\n      bidAmounts: {},\n      backendUrl: 'http://localhost:5000/api/projects',\n      preview: null,\n      loading: false,\n      projectHeaders: ['_id', '_title', '_budget_minimum', '_budget_maximum', '_type', '_bidperiod', '_time_submitted', '_bid_stats_bid_count', '_bid_stats_bid_avg', '_currency_code', '_currency_exchange_rate', '_proposal', '_full_description'], // Adjust with actual headers\n    };\n  },\n  methods: {\n    async fetchProjects() {\n  try {\n    this.loading = true;\n    const response = await axios.get(this.backendUrl, {\n      params: {\n        query: this.query,\n        limit: this.searchLimit,\n      },\n      withCredentials: true,\n    });\n    this.projects = response.data.projects_with_proposals;\n    console.log('Projects with proposals:', this.projects); // Log received data\n  } catch (error) {\n    console.error('Error fetching projects:', error);\n  } finally {\n    this.loading = false;\n  }\n},\n\n    previewBid() {\n      if (this.selectedProjects.length === 0) {\n        this.preview = 'No projects selected.';\n        return;\n      }\n      this.preview = {};\n      this.selectedProjects.forEach((projectId) => {\n        const project = this.projects.find((p) => p._id === projectId);\n        const bidAmount = this.bidAmounts[projectId] || 'Not specified';\n        this.projectHeaders.forEach((header) => {\n          this.preview[header] = project[header] || 'Not available';\n        });\n        this.preview.bidAmount = bidAmount;\n      });\n    },\n    submitBid() {\n      console.log('Submitting bids:', this.selectedProjects, this.bidAmounts);\n      // You can add logic here to send bid details to the backend\n    },\n  },\n};\n</script>\n\n<style scoped>\n/* Styles remain the same */\n</style>\n\n\n<style scoped>\n  /* Container style */\n  div {\n    font-family: 'Arial', sans-serif;\n    margin: 20px;\n    text-align: center;\n  }\n\n  h1 {\n    color: #4CAF50;\n  }\n\n  /* Input and button style */\n  label,\n  input,\n  button {\n    margin: 5px;\n  }\n\n  /* Table style */\n  table {\n    width: 100%;\n    border-collapse: collapse;\n    margin-top: 20px;\n  }\n\n  th,\n  td {\n    border: 1px solid #ddd;\n    padding: 8px;\n    text-align: center;\n  }\n\n  th {\n    background-color: #f2f2f2;\n  }\n  /* Checkbox and bid amount input style */\n  input[type=\"checkbox\"],\n  input[type=\"number\"] {\n    margin: 0;\n  }\n\n  /* Button container style */\n  div > div {\n    margin-top: 10px;\n  }\n\n  /* Preview and Submit button style */\n  button {\n    padding: 10px;\n    background-color: #4CAF50;\n    color: white;\n    border: none;\n    border-radius: 5px;\n    cursor: pointer;\n  }\n\n  button:hover {\n    background-color: #45a049;\n  }\n\n  /* Display Preview style */\n  h2 {\n    color: #4CAF50;\n  }\n\n  p {\n    margin-top: 10px;\n  }\n</style>\n"],"mappings":"AA0DA,OAAOA,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,KAAK,EAAE,EAAE;MACTC,WAAW,EAAE,EAAE;MACfC,QAAQ,EAAE,EAAE;MACZC,gBAAgB,EAAE,EAAE;MACpBC,UAAU,EAAE,CAAC,CAAC;MACdC,UAAU,EAAE,oCAAoC;MAChDC,OAAO,EAAE,IAAI;MACbC,OAAO,EAAE,KAAK;MACdC,cAAc,EAAE,CAAC,KAAK,EAAE,QAAQ,EAAE,iBAAiB,EAAE,iBAAiB,EAAE,OAAO,EAAE,YAAY,EAAE,iBAAiB,EAAE,sBAAsB,EAAE,oBAAoB,EAAE,gBAAgB,EAAE,yBAAyB,EAAE,WAAW,EAAE,mBAAmB,CAAC,CAAE;IAClP,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACP,MAAMC,aAAaA,CAAA,EAAG;MACxB,IAAI;QACF,IAAI,CAACH,OAAM,GAAI,IAAI;QACnB,MAAMI,QAAO,GAAI,MAAMb,KAAK,CAACc,GAAG,CAAC,IAAI,CAACP,UAAU,EAAE;UAChDQ,MAAM,EAAE;YACNb,KAAK,EAAE,IAAI,CAACA,KAAK;YACjBc,KAAK,EAAE,IAAI,CAACb;UACd,CAAC;UACDc,eAAe,EAAE;QACnB,CAAC,CAAC;QACF,IAAI,CAACb,QAAO,GAAIS,QAAQ,CAACZ,IAAI,CAACiB,uBAAuB;QACrDC,OAAO,CAACC,GAAG,CAAC,0BAA0B,EAAE,IAAI,CAAChB,QAAQ,CAAC,EAAE;MAC1D,EAAE,OAAOiB,KAAK,EAAE;QACdF,OAAO,CAACE,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;MAClD,UAAU;QACR,IAAI,CAACZ,OAAM,GAAI,KAAK;MACtB;IACF,CAAC;IAEGa,UAAUA,CAAA,EAAG;MACX,IAAI,IAAI,CAACjB,gBAAgB,CAACkB,MAAK,KAAM,CAAC,EAAE;QACtC,IAAI,CAACf,OAAM,GAAI,uBAAuB;QACtC;MACF;MACA,IAAI,CAACA,OAAM,GAAI,CAAC,CAAC;MACjB,IAAI,CAACH,gBAAgB,CAACmB,OAAO,CAAEC,SAAS,IAAK;QAC3C,MAAMC,OAAM,GAAI,IAAI,CAACtB,QAAQ,CAACuB,IAAI,CAAEC,CAAC,IAAKA,CAAC,CAACC,GAAE,KAAMJ,SAAS,CAAC;QAC9D,MAAMK,SAAQ,GAAI,IAAI,CAACxB,UAAU,CAACmB,SAAS,KAAK,eAAe;QAC/D,IAAI,CAACf,cAAc,CAACc,OAAO,CAAEO,MAAM,IAAK;UACtC,IAAI,CAACvB,OAAO,CAACuB,MAAM,IAAIL,OAAO,CAACK,MAAM,KAAK,eAAe;QAC3D,CAAC,CAAC;QACF,IAAI,CAACvB,OAAO,CAACsB,SAAQ,GAAIA,SAAS;MACpC,CAAC,CAAC;IACJ,CAAC;IACDE,SAASA,CAAA,EAAG;MACVb,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAE,IAAI,CAACf,gBAAgB,EAAE,IAAI,CAACC,UAAU,CAAC;MACvE;IACF;EACF;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}