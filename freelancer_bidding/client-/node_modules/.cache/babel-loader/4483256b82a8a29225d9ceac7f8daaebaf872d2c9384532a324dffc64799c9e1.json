{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default {\n  data() {\n    return {\n      userInput: '',\n      messages: [{\n        text: 'Welcome to the chatbot!',\n        isUser: false\n      }]\n    };\n  },\n  methods: {\n    sendMessage() {\n      if (this.userInput.trim() !== '') {\n        this.messages.push({\n          text: this.userInput,\n          isUser: true\n        });\n        // Here you would typically send the user input to your backend for processing\n        // and receive a response that you would then append to the messages array.\n        this.userInput = ''; // Clear the input field after sending message\n        this.$nextTick(() => {\n          this.$refs.chatMessages.scrollTop = this.$refs.chatMessages.scrollHeight; // Auto scroll to bottom\n        });\n      }\n    }\n  }\n};","map":{"version":3,"names":["data","userInput","messages","text","isUser","methods","sendMessage","trim","push","$nextTick","$refs","chatMessages","scrollTop","scrollHeight"],"sources":["/home/waseem/project/chatbot/client-/src/App.vue"],"sourcesContent":["<template>\n  <div class=\"chat-container\">\n    <div class=\"chat-messages\" ref=\"chatMessages\">\n      <div v-for=\"(message, index) in messages\" :key=\"index\" class=\"message\" :class=\"{ 'user-message': message.isUser }\">\n        {{ message.text }}\n      </div>\n    </div>\n    <div class=\"chat-input\">\n      <input type=\"text\" v-model=\"userInput\" @keyup.enter=\"sendMessage\" placeholder=\"Type your message...\" />\n      <button @click=\"sendMessage\">Send</button>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      userInput: '',\n      messages: [\n        { text: 'Welcome to the chatbot!', isUser: false }\n      ]\n    };\n  },\n  methods: {\n    sendMessage() {\n      if (this.userInput.trim() !== '') {\n        this.messages.push({ text: this.userInput, isUser: true });\n        // Here you would typically send the user input to your backend for processing\n        // and receive a response that you would then append to the messages array.\n        this.userInput = ''; // Clear the input field after sending message\n        this.$nextTick(() => {\n          this.$refs.chatMessages.scrollTop = this.$refs.chatMessages.scrollHeight; // Auto scroll to bottom\n        });\n      }\n    }\n  }\n};\n</script>\n\n<style scoped>\n.chat-container {\n  width: 300px;\n  border: 1px solid #ccc;\n  border-radius: 5px;\n  overflow: hidden;\n}\n\n.chat-messages {\n  max-height: 300px;\n  overflow-y: auto;\n  padding: 10px;\n}\n\n.message {\n  margin-bottom: 10px;\n  padding: 5px 10px;\n  border-radius: 5px;\n}\n\n.user-message {\n  background-color: #f0f0f0;\n}\n\n.chat-input {\n  display: flex;\n  padding: 10px;\n}\n\n.chat-input input {\n  flex: 1;\n  padding: 5px;\n  border-radius: 3px;\n  border: 1px solid #ccc;\n}\n\n.chat-input button {\n  padding: 5px 10px;\n  margin-left: 5px;\n  border-radius: 3px;\n  background-color: #007bff;\n  color: #fff;\n  border: none;\n  cursor: pointer;\n}\n</style>\n"],"mappings":";AAeA,eAAe;EACbA,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,SAAS,EAAE,EAAE;MACbC,QAAQ,EAAE,CACR;QAAEC,IAAI,EAAE,yBAAyB;QAAEC,MAAM,EAAE;MAAM;IAErD,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACPC,WAAWA,CAAA,EAAG;MACZ,IAAI,IAAI,CAACL,SAAS,CAACM,IAAI,CAAC,MAAM,EAAE,EAAE;QAChC,IAAI,CAACL,QAAQ,CAACM,IAAI,CAAC;UAAEL,IAAI,EAAE,IAAI,CAACF,SAAS;UAAEG,MAAM,EAAE;QAAK,CAAC,CAAC;QAC1D;QACA;QACA,IAAI,CAACH,SAAQ,GAAI,EAAE,EAAE;QACrB,IAAI,CAACQ,SAAS,CAAC,MAAM;UACnB,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,SAAQ,GAAI,IAAI,CAACF,KAAK,CAACC,YAAY,CAACE,YAAY,EAAE;QAC5E,CAAC,CAAC;MACJ;IACF;EACF;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}