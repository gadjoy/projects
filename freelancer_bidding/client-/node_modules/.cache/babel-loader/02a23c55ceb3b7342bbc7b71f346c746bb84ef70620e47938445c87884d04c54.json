{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, toDisplayString as _toDisplayString, vModelCheckbox as _vModelCheckbox, createTextVNode as _createTextVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-7ba5bd90\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h1\", null, \"FREELANCER AUTO BIDDING\", -1 /* HOISTED */));\nconst _hoisted_2 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"query\"\n}, \"Query:\", -1 /* HOISTED */));\nconst _hoisted_3 = [\"disabled\"];\nconst _hoisted_4 = {\n  key: 0,\n  class: \"spinner-container\"\n};\nconst _hoisted_5 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"spinner\"\n}, null, -1 /* HOISTED */));\nconst _hoisted_6 = [_hoisted_5];\nconst _hoisted_7 = {\n  key: 0\n};\nconst _hoisted_8 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"th\", null, \"Select\", -1 /* HOISTED */));\nconst _hoisted_9 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"th\", null, \"Bid Amount\", -1 /* HOISTED */));\nconst _hoisted_10 = [\"value\"];\nconst _hoisted_11 = [\"onClick\"];\nconst _hoisted_12 = [\"onUpdate:modelValue\"];\nconst _hoisted_13 = {\n  key: 0,\n  class: \"modal\"\n};\nconst _hoisted_14 = {\n  class: \"modal-content\"\n};\nconst _hoisted_15 = {\n  key: 1,\n  class: \"preview-container\"\n};\nconst _hoisted_16 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h2\", null, \"Preview:\", -1 /* HOISTED */));\nconst _hoisted_17 = {\n  key: 0\n};\nconst _hoisted_18 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"th\", null, \"Bid Amount\", -1 /* HOISTED */));\nconst _hoisted_19 = [\"onUpdate:modelValue\"];\nconst _hoisted_20 = {\n  key: 1\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_hoisted_1, _createElementVNode(\"div\", null, [_hoisted_2, _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.query = $event),\n    type: \"text\",\n    id: \"query\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.query]]), _createElementVNode(\"button\", {\n    onClick: _cache[1] || (_cache[1] = (...args) => $options.fetchProjects && $options.fetchProjects(...args)),\n    disabled: $data.loading\n  }, \"Search\", 8 /* PROPS */, _hoisted_3), $data.loading ? (_openBlock(), _createElementBlock(\"div\", _hoisted_4, [..._hoisted_6])) : _createCommentVNode(\"v-if\", true)]), !$data.loading && $data.projects.length > 0 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_7, [_createElementVNode(\"table\", null, [_createCommentVNode(\" Table headers \"), _createElementVNode(\"thead\", null, [_createElementVNode(\"tr\", null, [_hoisted_8, (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.projectHeaders, header => {\n    return _openBlock(), _createElementBlock(\"th\", {\n      key: header\n    }, _toDisplayString(header), 1 /* TEXT */);\n  }), 128 /* KEYED_FRAGMENT */)), _hoisted_9, _createCommentVNode(\" New column for bid amount \")])]), _createCommentVNode(\" Table body \"), _createElementVNode(\"tbody\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.projects, project => {\n    return _openBlock(), _createElementBlock(\"tr\", {\n      key: project.id\n    }, [_createCommentVNode(\" Checkbox for selection \"), _createElementVNode(\"td\", null, [_withDirectives(_createElementVNode(\"input\", {\n      type: \"checkbox\",\n      \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.selectedProjects = $event),\n      value: project.id\n    }, null, 8 /* PROPS */, _hoisted_10), [[_vModelCheckbox, $data.selectedProjects]])]), _createCommentVNode(\" Display project data \"), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.projectHeaders, header => {\n      return _openBlock(), _createElementBlock(\"td\", {\n        key: header\n      }, [header !== 'description' ? (_openBlock(), _createElementBlock(_Fragment, {\n        key: 0\n      }, [_createTextVNode(_toDisplayString(project[header] || 'Not available'), 1 /* TEXT */)], 64 /* STABLE_FRAGMENT */)) : (_openBlock(), _createElementBlock(\"button\", {\n        key: 1,\n        onClick: $event => $options.openModal(project.description)\n      }, \"View Description\", 8 /* PROPS */, _hoisted_11))]);\n    }), 128 /* KEYED_FRAGMENT */)), _createElementVNode(\"td\", null, [_withDirectives(_createElementVNode(\"input\", {\n      type: \"number\",\n      \"onUpdate:modelValue\": $event => project.bidAmount = $event,\n      min: \"0\",\n      step: \"0.01\",\n      placeholder: \"Bid Amount\"\n    }, null, 8 /* PROPS */, _hoisted_12), [[_vModelText, project.bidAmount]])])]);\n  }), 128 /* KEYED_FRAGMENT */))])]), _createCommentVNode(\" Buttons for preview and submit \"), _createElementVNode(\"div\", null, [_createElementVNode(\"button\", {\n    onClick: _cache[3] || (_cache[3] = (...args) => $options.previewBid && $options.previewBid(...args))\n  }, \"Preview\"), _createElementVNode(\"button\", {\n    onClick: _cache[4] || (_cache[4] = (...args) => $options.submitBid && $options.submitBid(...args))\n  }, \"Submit\")]), _createCommentVNode(\" Modal window for project description \"), $data.showModal ? (_openBlock(), _createElementBlock(\"div\", _hoisted_13, [_createElementVNode(\"div\", _hoisted_14, [_createElementVNode(\"span\", {\n    class: \"close\",\n    onClick: _cache[5] || (_cache[5] = (...args) => $options.closeModal && $options.closeModal(...args))\n  }, \"Ã—\"), _createElementVNode(\"p\", null, _toDisplayString($data.modalDescription), 1 /* TEXT */)])])) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" Display Preview \"), $data.preview ? (_openBlock(), _createElementBlock(\"div\", _hoisted_15, [_hoisted_16, $data.selectedProjects.length > 0 ? (_openBlock(), _createElementBlock(\"table\", _hoisted_17, [_createElementVNode(\"thead\", null, [_createElementVNode(\"tr\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.projectHeaders, (header, index) => {\n    return _openBlock(), _createElementBlock(\"th\", {\n      key: index\n    }, _toDisplayString(header), 1 /* TEXT */);\n  }), 128 /* KEYED_FRAGMENT */)), _hoisted_18, _createCommentVNode(\" New column for bid amount \")])]), _createElementVNode(\"tbody\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.preview, (item, index) => {\n    return _openBlock(), _createElementBlock(\"tr\", {\n      key: index\n    }, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(item, (value, key) => {\n      return _openBlock(), _createElementBlock(\"td\", {\n        key: key\n      }, _toDisplayString(value || 'Not available'), 1 /* TEXT */);\n    }), 128 /* KEYED_FRAGMENT */)), _createElementVNode(\"td\", null, [_withDirectives(_createElementVNode(\"input\", {\n      type: \"number\",\n      \"onUpdate:modelValue\": $event => item.bidAmount = $event,\n      min: \"0\",\n      step: \"0.01\",\n      placeholder: \"Bid Amount\"\n    }, null, 8 /* PROPS */, _hoisted_19), [[_vModelText, item.bidAmount]])])]);\n  }), 128 /* KEYED_FRAGMENT */))])])) : (_openBlock(), _createElementBlock(\"p\", _hoisted_20, \"No projects selected for preview.\")), _createCommentVNode(\" Confirmation button \"), _createElementVNode(\"button\", {\n    onClick: _cache[6] || (_cache[6] = (...args) => $options.confirmBid && $options.confirmBid(...args))\n  }, \"Confirm\")])) : _createCommentVNode(\"v-if\", true)])) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"names":["_createElementVNode","for","key","class","_hoisted_5","_createElementBlock","_hoisted_1","_hoisted_2","_cache","$event","$data","query","type","id","onClick","args","$options","fetchProjects","disabled","loading","_hoisted_3","_hoisted_4","_hoisted_6","_createCommentVNode","projects","length","_hoisted_7","_hoisted_8","_Fragment","_renderList","projectHeaders","header","_toDisplayString","_hoisted_9","project","selectedProjects","value","_hoisted_10","_createTextVNode","openModal","description","_hoisted_11","bidAmount","min","step","placeholder","_hoisted_12","previewBid","submitBid","showModal","_hoisted_13","_hoisted_14","closeModal","modalDescription","preview","_hoisted_15","_hoisted_16","_hoisted_17","index","_hoisted_18","item","_hoisted_19","_hoisted_20","confirmBid"],"sources":["/home/waseem/project/freelancer_bidding_automation/client-/src/App.vue"],"sourcesContent":["<template>\n  <div>\n    <h1>FREELANCER AUTO BIDDING</h1>\n\n    <div>\n      <label for=\"query\">Query:</label>\n      <input v-model=\"query\"\n      type=\"text\" id=\"query\" />\n      <button @click=\"fetchProjects\" :disabled=\"loading\">Search</button>\n\n      <div v-if=\"loading\" class=\"spinner-container\">\n        <div class=\"spinner\"></div>\n      </div>\n    </div>\n\n    <div v-if=\"!loading && projects.length > 0\">\n      <table>\n        <!-- Table headers -->\n        <thead>\n          <tr>\n            <th>Select</th>\n            <th v-for=\"header in projectHeaders\" :key=\"header\">{{ header }}</th>\n            <th>Bid Amount</th> <!-- New column for bid amount -->\n          </tr>\n        </thead>\n        <!-- Table body -->\n        <tbody>\n          <tr v-for=\"project in projects\" :key=\"project.id\">\n            <!-- Checkbox for selection -->\n            <td>\n              <input type=\"checkbox\" v-model=\"selectedProjects\" :value=\"project.id\" />\n            </td>\n            <!-- Display project data -->\n            <td v-for=\"header in projectHeaders\" :key=\"header\">\n              <template v-if=\"header !== 'description'\">\n                {{ project[header] || 'Not available' }}\n              </template>\n              <template v-else>\n                <button @click=\"openModal(project.description)\">View Description</button>\n              </template>\n            </td>\n            <td>\n              <input type=\"number\" v-model=\"project.bidAmount\" min=\"0\" step=\"0.01\" placeholder=\"Bid Amount\" />\n            </td>\n          </tr>\n        </tbody>\n      </table>\n\n      <!-- Buttons for preview and submit -->\n      <div>\n        <button @click=\"previewBid\">Preview</button>\n        <button @click=\"submitBid\">Submit</button>\n      </div>\n\n      <!-- Modal window for project description -->\n      <div v-if=\"showModal\" class=\"modal\">\n        <div class=\"modal-content\">\n          <span class=\"close\" @click=\"closeModal\">&times;</span>\n          <p>{{ modalDescription }}</p>\n        </div>\n      </div>\n\n      <!-- Display Preview -->\n      <div v-if=\"preview\" class=\"preview-container\">\n        <h2>Preview:</h2>\n        <table v-if=\"selectedProjects.length > 0\">\n          <thead>\n            <tr>\n              <th v-for=\"(header, index) in projectHeaders\" :key=\"index\">{{ header }}</th>\n              <th>Bid Amount</th> <!-- New column for bid amount -->\n            </tr>\n          </thead>\n          <tbody>\n            <tr v-for=\"(item, index) in preview\" :key=\"index\">\n              <td v-for=\"(value, key) in item\" :key=\"key\">\n                {{ value || 'Not available' }}\n              </td>\n              <td>\n                <input type=\"number\" v-model=\"item.bidAmount\" min=\"0\" step=\"0.01\" placeholder=\"Bid Amount\" />\n              </td>\n            </tr>\n          </tbody>\n        </table>\n        <p v-else>No projects selected for preview.</p>\n        <!-- Confirmation button -->\n        <button @click=\"confirmBid\">Confirm</button>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios';\n\nexport default {\n  data() {\n    return {\n      query: '',\n      searchLimit: '',\n      projects: [],\n      selectedProjects: [],\n      loading: false, // Add loading state\n      backendUrl: 'http://127.0.0.1:5000',\n      preview: null,\n      projectHeaders: [\n        'id',\n        'title',\n        'seo_url',\n        'submitdate',\n        'budget_minimum',\n        'budget_maximum',\n        'currency_code',\n        'currency_exchange_rate',\n        'bid_stats_bid_count',\n        'bid_stats_bid_avg',\n        'budget_maximum_usd',\n        'budget_minimum_usd',\n        'description',\n        'proposal'\n      ],\n      showModal: false,\n      modalDescription: ''\n    };\n  },\n  methods: {\n    async fetchProjects() {\n      try {\n        this.loading = true; // Set loading state to true\n        const response = await axios.get(`${this.backendUrl}/search_projects`, {\n          params: {\n            query: this.query,\n          },\n        });\n\n        this.projects = response.data;\n\n      } catch (error) {\n        console.error('Error fetching projects:', error);\n      } finally {\n        this.loading = false; // Set loading state to false\n      }\n    },\n    openModal(description) {\n      this.showModal = true;\n      this.modalDescription = description;\n    },\n    closeModal() {\n      this.showModal = false;\n      this.modalDescription = '';\n    },\n    previewBid() {\n      if (this.selectedProjects.length === 0) {\n        this.preview = [];\n        return;\n      }\n\n      this.preview = [];\n\n      this.selectedProjects.forEach((projectId) => {\n        const project = this.projects.find((p) => p.id === projectId);\n        const previewItem = {};\n\n        this.projectHeaders.forEach((header) => {\n          previewItem[header] = project[header] || 'Not available';\n        });\n\n        this.preview.push(previewItem);\n      });\n    },\n    async submitBid() {\n      console.log('Submitting bids:', this.selectedProjects);\n\n      const bids = this.preview.map(item => ({\n        projectId: item.id,\n        bidAmount: item.bidAmount\n      }));\n\n      try {\n        const response = await axios.post(`${this.backendUrl}/submit_bids`, bids);\n        console.log('Bids submitted:', response.data);\n      } catch (error) {\n        console.error('Error submitting bids:', error);\n      }\n    },\n    async generateProposal(id) {\n      try {\n        const response = await axios.get(`${this.backendUrl}/generate_proposal`, {\n          params: {\n            id: id,\n          },\n        });\n        return response.data;\n      } catch (error) {\n        console.error('Error generating proposal:', error);\n        return null;\n      }\n    },\n    async confirmBid() {\n      const proposals = [];\n      for (const item of this.preview) {\n        if (item.bidAmount !== undefined && item.bidAmount !== null) {\n          const proposal = await this.generateProposal(item.id);\n          if (proposal) {\n            proposals.push({\n              projectId: item.id,\n              bidAmount: item.bidAmount,\n              proposal: proposal,\n            });\n          }\n        }\n      }\n      // Now 'proposals' array contains all bid details with generated proposals\n      // You can now make a post request to submit these bids\n      try {\n        const response = await axios.post(`${this.backendUrl}/submit_bids`, proposals);\n        console.log('Bids submitted:', response.data);\n      } catch (error) {\n        console.error('Error submitting bids:', error);\n      }\n    },\n  },\n};\n</script>\n\n<style scoped>\n  /* Spinner container style */\n.spinner-container {\n  position: relative;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\n/* Spinner style */\n.spinner {\n  width: 40px;\n  height: 40px;\n  border-radius: 50%;\n  border: 4px solid rgba(0, 0, 0, 0.1);\n  border-left-color: #3498db; /* Blue */\n  animation: spin 1s linear infinite;\n}\n\n@keyframes spin {\n  0% { transform: rotate(0deg); }\n  100% { transform: rotate(360deg); }\n}\n\n/* Container style */\ndiv {\n  font-family: 'Arial', sans-serif;\n  margin: 20px;\n  text-align: center;\n}\n\n/* Preview container style */\n.preview-container {\n  border: 1px solid #ddd;\n  padding: 10px;\n  margin-top: 20px;\n}\n\nh1 {\n  color: #4CAF50;\n}\n\n/* Input and button style */\nlabel,\ninput,\nbutton {\n  margin: 5px;\n}\n\n/* Table style */\ntable {\n  width: 100%;\n  border-collapse: collapse;\n  margin-top: 20px;\n}\n\nth,\ntd {\n  border: 1px solid #ddd;\n  padding: 8px;\n  text-align: center;\n}\n\nth {\n  background-color: #f2f2f2;\n}\n\n/* Checkbox and bid amount input style */\ninput[type=\"checkbox\"],\ninput[type=\"number\"] {\n  margin: 0;\n}\n\n/* Button container style */\ndiv > div {\n  margin-top: 10px;\n}\n\n/* Preview and Submit button style */\nbutton {\n  padding: 10px;\n  background-color: #4CAF50;\n  color: white;\n  border: none;\n  border-radius: 5px;\n  cursor: pointer;\n}\n\nbutton:hover {\n  background-color: #45a049;\n}\n\n/* Modal style */\n.modal {\n  display: block;\n  position: fixed;\n  z-index: 1;\n  left: 0;\n  top: 0;\n  width: 100%;\n  height: 100%;\n  overflow: auto;\n  background-color: rgba(0, 0, 0, 0.4);\n}\n\n.modal-content {\n  background-color: #fefefe;\n  margin: 15% auto;\n  padding: 20px;\n  border: 1px solid #888;\n  width: 80%;\n}\n\n.close {\n  color: #aaa;\n  float: right;\n  font-size: 28px;\n  font-weight: bold;\n}\n\n.close:hover,\n.close:focus {\n  color: black;\n  text-decoration: none;\n  cursor: pointer;\n}\n</style>\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}