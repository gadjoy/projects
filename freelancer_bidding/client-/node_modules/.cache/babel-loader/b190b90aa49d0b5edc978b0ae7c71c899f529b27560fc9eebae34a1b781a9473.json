{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"h1\", null, \"Project List\", -1 /* HOISTED */);\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_hoisted_1, _createElementVNode(\"table\", null, [_createElementVNode(\"thead\", null, [_createElementVNode(\"tr\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.headers, header => {\n    return _openBlock(), _createElementBlock(\"th\", {\n      key: header\n    }, _toDisplayString(header), 1 /* TEXT */);\n  }), 128 /* KEYED_FRAGMENT */))])]), _createElementVNode(\"tbody\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.projects, (project, index) => {\n    return _openBlock(), _createElementBlock(\"tr\", {\n      key: index\n    }, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.headers, header => {\n      return _openBlock(), _createElementBlock(\"td\", {\n        key: header\n      }, _toDisplayString(project[header]), 1 /* TEXT */);\n    }), 128 /* KEYED_FRAGMENT */))]);\n  }), 128 /* KEYED_FRAGMENT */))])])]);\n}","map":{"version":3,"names":["_createElementVNode","_createElementBlock","_hoisted_1","_Fragment","_renderList","$data","headers","header","key","_toDisplayString","projects","project","index"],"sources":["/home/waseem/project/freelancer_bidding_automation/client-/src/App.vue"],"sourcesContent":["<template>\n  <div>\n    <h1>Project List</h1>\n    <table>\n      <thead>\n        <tr>\n          <th v-for=\"header in headers\" :key=\"header\">{{ header }}</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr v-for=\"(project, index) in projects\" :key=\"index\">\n          <td v-for=\"header in headers\" :key=\"header\">{{ project[header] }}</td>\n        </tr>\n      </tbody>\n    </table>\n  </div>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      projects: [],\n      headers: [],\n    };\n  },\n  created() {\n    this.fetchProjects();\n  },\n  methods: {\n    fetchProjects() {\n      fetch('http://127.0.0.1:5000/api/projects') // Adjust the URL if needed\n        .then((response) => response.json())\n        .then((data) => {\n          if (data.error) {\n            console.error('Error fetching projects:', data.error);\n          } else {\n            // Assuming data is an array of objects with consistent keys\n            this.projects = data;\n            // Extract headers from the first project\n            this.headers = Object.keys(data[0]);\n          }\n        })\n        .catch((error) => {\n          console.error('Error fetching projects:', error);\n        });\n    },\n  },\n};\n</script>\n\n<style>\n/* Add your CSS styles here */\n</style>\n"],"mappings":";gCAEIA,mBAAA,CAAqB,YAAjB,cAAY;;uBADlBC,mBAAA,CAcM,cAbJC,UAAqB,EACrBF,mBAAA,CAWQ,gBAVNA,mBAAA,CAIQ,gBAHNA,mBAAA,CAEK,c,kBADHC,mBAAA,CAA6DE,SAAA,QANvEC,WAAA,CAM+BC,KAAA,CAAAC,OAAO,EAAjBC,MAAM;yBAAjBN,mBAAA,CAA6D;MAA9BO,GAAG,EAAED;IAAM,GAAAE,gBAAA,CAAKF,MAAM;sCAGzDP,mBAAA,CAIQ,iB,kBAHNC,mBAAA,CAEKE,SAAA,QAZbC,WAAA,CAUuCC,KAAA,CAAAK,QAAQ,EAV/C,CAUoBC,OAAO,EAAEC,KAAK;yBAA1BX,mBAAA,CAEK;MAFqCO,GAAG,EAAEI;IAAK,K,kBAClDX,mBAAA,CAAsEE,SAAA,QAXhFC,WAAA,CAW+BC,KAAA,CAAAC,OAAO,EAAjBC,MAAM;2BAAjBN,mBAAA,CAAsE;QAAvCO,GAAG,EAAED;MAAM,GAAAE,gBAAA,CAAKE,OAAO,CAACJ,MAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}