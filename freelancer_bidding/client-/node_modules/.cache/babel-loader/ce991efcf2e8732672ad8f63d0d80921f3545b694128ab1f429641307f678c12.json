{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, createCommentVNode as _createCommentVNode, vModelSelect as _vModelSelect, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"container\"\n};\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"chat-heading\"\n}, [/*#__PURE__*/_createElementVNode(\"h2\", null, \"CHAT TESTER\")], -1 /* HOISTED */);\nconst _hoisted_3 = {\n  class: \"input-section\"\n};\nconst _hoisted_4 = {\n  class: \"test-case-selection\"\n};\nconst _hoisted_5 = /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"test-case-type\"\n}, \"Test Case Type:\", -1 /* HOISTED */);\nconst _hoisted_6 = /*#__PURE__*/_createElementVNode(\"option\", {\n  value: \"Type A\"\n}, \"Type A\", -1 /* HOISTED */);\nconst _hoisted_7 = /*#__PURE__*/_createElementVNode(\"option\", {\n  value: \"Type B\"\n}, \"Type B\", -1 /* HOISTED */);\nconst _hoisted_8 = {\n  class: \"error-classification\"\n};\nconst _hoisted_9 = /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"error-type\"\n}, \"Error Classification:\", -1 /* HOISTED */);\nconst _hoisted_10 = /*#__PURE__*/_createElementVNode(\"option\", {\n  value: \"Syntax Error\"\n}, \"Syntax Error\", -1 /* HOISTED */);\nconst _hoisted_11 = /*#__PURE__*/_createElementVNode(\"option\", {\n  value: \"Runtime Error\"\n}, \"Runtime Error\", -1 /* HOISTED */);\nconst _hoisted_12 = {\n  class: \"generate-section\"\n};\nconst _hoisted_13 = [\"innerHTML\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_hoisted_2, _createElementVNode(\"div\", _hoisted_3, [_withDirectives(_createElementVNode(\"textarea\", {\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.textInput = $event),\n    placeholder: \"Enter text\",\n    class: \"input-textarea\",\n    rows: \"5\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.textInput]])]), _createElementVNode(\"div\", _hoisted_4, [_hoisted_5, _withDirectives(_createElementVNode(\"select\", {\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.testCaseType = $event),\n    id: \"test-case-type\"\n  }, [_hoisted_6, _hoisted_7, _createCommentVNode(\" Add more options as needed \")], 512 /* NEED_PATCH */), [[_vModelSelect, $data.testCaseType]])]), _createElementVNode(\"div\", _hoisted_8, [_hoisted_9, _withDirectives(_createElementVNode(\"select\", {\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.errorType = $event),\n    id: \"error-type\"\n  }, [_hoisted_10, _hoisted_11, _createCommentVNode(\" Add more options as needed \")], 512 /* NEED_PATCH */), [[_vModelSelect, $data.errorType]])]), _createElementVNode(\"div\", _hoisted_12, [_createElementVNode(\"button\", {\n    onClick: _cache[3] || (_cache[3] = (...args) => $options.generateContent && $options.generateContent(...args)),\n    class: \"generate-button\"\n  }, \"Generate\")]), _createCommentVNode(\" <div v-if=\\\"generatedContent || errorMessage\\\" class=\\\"result-section\\\">\\n        <div class=\\\"generated-content-box\\\" v-if=\\\"generatedContent\\\">\\n          <h3>OUTPUT</h3>\\n          <ul>\\n            <li v-for=\\\"(point, index) in generatedContent\\\" :key=\\\"index\\\">\\n              <span :class=\\\"{ 'bigger-font': point.startsWith('*') }\\\">{{ point }}</span>\\n            </li>\\n          </ul>\\n        </div>\\n        <div v-if=\\\"errorMessage\\\" class=\\\"error-section\\\">\\n          <p>Error: {{ errorMessage }}</p>\\n        </div>\\n      </div> \"), _createElementVNode(\"div\", {\n    innerHTML: $data.markdownOutput\n  }, null, 8 /* PROPS */, _hoisted_13)]);\n}","map":{"version":3,"names":["class","_createElementVNode","for","value","_createElementBlock","_hoisted_1","_hoisted_2","_hoisted_3","_cache","$event","$data","textInput","placeholder","rows","_hoisted_4","_hoisted_5","testCaseType","id","_hoisted_6","_hoisted_7","_createCommentVNode","_hoisted_8","_hoisted_9","errorType","_hoisted_10","_hoisted_11","_hoisted_12","onClick","args","$options","generateContent","innerHTML","markdownOutput","_hoisted_13"],"sources":["/home/waseem/project/chatbot/client-/src/App.vue"],"sourcesContent":["<template>\n    <div class=\"container\">\n      <div class=\"chat-heading\">\n        <h2>CHAT TESTER</h2>\n      </div>\n  \n      <div class=\"input-section\">\n        <textarea v-model=\"textInput\" placeholder=\"Enter text\" class=\"input-textarea\" rows=\"5\"></textarea>\n      </div>\n  \n      <div class=\"test-case-selection\">\n        <label for=\"test-case-type\">Test Case Type:</label>\n        <select v-model=\"testCaseType\" id=\"test-case-type\">\n          <option value=\"Type A\">Type A</option>\n          <option value=\"Type B\">Type B</option>\n          <!-- Add more options as needed -->\n        </select>\n      </div>\n  \n      <div class=\"error-classification\">\n        <label for=\"error-type\">Error Classification:</label>\n        <select v-model=\"errorType\" id=\"error-type\">\n          <option value=\"Syntax Error\">Syntax Error</option>\n          <option value=\"Runtime Error\">Runtime Error</option>\n          <!-- Add more options as needed -->\n        </select>\n      </div>\n  \n      <div class=\"generate-section\">\n        <button @click=\"generateContent\" class=\"generate-button\">Generate</button>\n      </div>\n  \n      <!-- <div v-if=\"generatedContent || errorMessage\" class=\"result-section\">\n        <div class=\"generated-content-box\" v-if=\"generatedContent\">\n          <h3>OUTPUT</h3>\n          <ul>\n            <li v-for=\"(point, index) in generatedContent\" :key=\"index\">\n              <span :class=\"{ 'bigger-font': point.startsWith('*') }\">{{ point }}</span>\n            </li>\n          </ul>\n        </div>\n        <div v-if=\"errorMessage\" class=\"error-section\">\n          <p>Error: {{ errorMessage }}</p>\n        </div>\n      </div> -->\n      <div v-html=\"markdownOutput\"> </div>\n    </div>\n  </template>\n  \n  <script>\n\n  import showdown from 'showdown';\n\n  export default {\n    data() {\n      return {\n        textInput: \"\",\n        generatedContent: [],\n        errorMessage: \"\",\n        testCaseType: \"\",\n        errorType: \"\",\n        markdownOutput: \"\",\n      };\n    },\n    methods: {\n      async generateContent() {\n        try {\n          const response = await fetch('http://127.0.0.1:5000/generate_content', {\n            method: \"POST\",\n            headers: {\n              \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify({ \n              text: this.textInput,\n              testCaseType: this.testCaseType,\n              errorType: this.errorType\n            })\n          });\n  \n          const responseData = await response.json();\n  \n          if (response.ok) {\n            console.log(responseData)\n            \n            this.markdownOutput = this.converter.makeHtml(responseData.generated_content)\n            \n            this.generatedContent = responseData.generated_content.split('\\n');\n            this.errorMessage = \"\";\n          } else {\n            this.generatedContent = [];\n            this.errorMessage = responseData.message || \"Failed to generate content.\";\n          }\n        } catch (error) {\n          console.error(\"Error generating content:\", error);\n          this.generatedContent = [];\n          this.errorMessage = \"An error occurred while generating content.\";\n        }\n      }\n    },\n    mounted() {\n      this.converter = new showdown.Converter();\n    }\n  };\n  </script>\n  \n  <style>\n  .container {\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    min-height: 100vh;\n    font-family: sans-serif;\n    background-color:whitesmoke; /* Changed background color to light grey */\n    padding: 2rem;\n  }\n  \n  .chat-heading {\n    margin-top: 20px;\n    text-align: center;\n  }\n  \n  h2 {\n    font-size: 28px;\n    color: #449D44;\n  }\n  \n  .input-section,\n  .test-case-selection,\n  .error-classification,\n  .generate-section {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: space-between;\n    margin-top: 20px;\n    margin-bottom: 20px;\n    width: 100%;\n  }\n  \n  .input-textarea {\n    flex: 1;\n    width: 1500px;\n    min-height: 100px;\n    padding: 10px;\n    border: 1px solid #ccc;\n    border-radius: 5px;\n    resize: horizontal;\n    margin-right: 10px;\n  }\n  \n  .test-case-selection label,\n  .error-classification label {\n    margin-bottom: 5px; /* Adjusted for better spacing */\n  }\n  \n  .test-case-selection select,\n  .error-classification select {\n    width: 600px;\n    padding: 8px;\n    border: 1px solid #ccc;\n    border-radius: 5px;\n  }\n  \n  .generate-button {\n    margin-top: 10px; /* Adjusted for better spacing */\n    padding: 10px 20px;\n    background-color: #007bff;\n    color: #fff;\n    border: none;\n    border-radius: 5px;\n    cursor: pointer;\n  }\n  \n  .generate-button:hover {\n    background-color: #0056b3;\n  }\n  \n  .result-section,\n  .error-section {\n    text-align: center;\n    max-width: 80%;\n    margin-bottom: 20px;\n  }\n  \n  .generated-content-box {\n    padding: 10px;\n    border: 1px solid #ccc;\n    border-radius: 5px;\n    background-color: #f9f9f9;\n    width: 1500px; /* Same width as input textarea */\n    max-width: 100%;\n    min-height: 100%;\n    margin: 20px auto; /* Center horizontally and vertically */\n    text-align: left; /* Align text to start from the left */\n  }\n  \n  .bold {\n    font-weight: bo;\n  }\n  \n  p {\n    font-size: 18px;\n    color: #333;\n  }\n  \n  .bigger-font{\n    font-size: 20px;\n  }\n  </style>\n  "],"mappings":";;EACSA,KAAK,EAAC;AAAW;gCACpBC,mBAAA,CAEM;EAFDD,KAAK,EAAC;AAAc,I,aACvBC,mBAAA,CAAoB,YAAhB,aAAW,E;;EAGZD,KAAK,EAAC;AAAe;;EAIrBA,KAAK,EAAC;AAAqB;gCAC9BC,mBAAA,CAAmD;EAA5CC,GAAG,EAAC;AAAgB,GAAC,iBAAe;gCAEzCD,mBAAA,CAAsC;EAA9BE,KAAK,EAAC;AAAQ,GAAC,QAAM;gCAC7BF,mBAAA,CAAsC;EAA9BE,KAAK,EAAC;AAAQ,GAAC,QAAM;;EAK5BH,KAAK,EAAC;AAAsB;gCAC/BC,mBAAA,CAAqD;EAA9CC,GAAG,EAAC;AAAY,GAAC,uBAAqB;iCAE3CD,mBAAA,CAAkD;EAA1CE,KAAK,EAAC;AAAc,GAAC,cAAY;iCACzCF,mBAAA,CAAoD;EAA5CE,KAAK,EAAC;AAAe,GAAC,eAAa;;EAK1CH,KAAK,EAAC;AAAkB;oBA5BnC;;uBACII,mBAAA,CA6CM,OA7CNC,UA6CM,GA5CJC,UAEM,EAENL,mBAAA,CAEM,OAFNM,UAEM,G,gBADJN,mBAAA,CAAkG;IAP1G,uBAAAO,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAO2BC,KAAA,CAAAC,SAAS,GAAAF,MAAA;IAAEG,WAAW,EAAC,YAAY;IAACZ,KAAK,EAAC,gBAAgB;IAACa,IAAI,EAAC;iDAAhEH,KAAA,CAAAC,SAAS,E,KAG9BV,mBAAA,CAOM,OAPNa,UAOM,GANJC,UAAmD,E,gBACnDd,mBAAA,CAIS;IAhBjB,uBAAAO,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAYyBC,KAAA,CAAAM,YAAY,GAAAP,MAAA;IAAEQ,EAAE,EAAC;MAChCC,UAAsC,EACtCC,UAAsC,EACtCC,mBAAA,gCAAmC,C,0CAHpBV,KAAA,CAAAM,YAAY,E,KAO/Bf,mBAAA,CAOM,OAPNoB,UAOM,GANJC,UAAqD,E,gBACrDrB,mBAAA,CAIS;IAzBjB,uBAAAO,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAqByBC,KAAA,CAAAa,SAAS,GAAAd,MAAA;IAAEQ,EAAE,EAAC;MAC7BO,WAAkD,EAClDC,WAAoD,EACpDL,mBAAA,gCAAmC,C,0CAHpBV,KAAA,CAAAa,SAAS,E,KAO5BtB,mBAAA,CAEM,OAFNyB,WAEM,GADJzB,mBAAA,CAA0E;IAAjE0B,OAAK,EAAAnB,MAAA,QAAAA,MAAA,UAAAoB,IAAA,KAAEC,QAAA,CAAAC,eAAA,IAAAD,QAAA,CAAAC,eAAA,IAAAF,IAAA,CAAe;IAAE5B,KAAK,EAAC;KAAkB,UAAQ,E,GAGnEoB,mBAAA,uiBAYU,EACVnB,mBAAA,CAAoC;IAA/B8B,SAAuB,EAAfrB,KAAA,CAAAsB;EAAc,wBA7CjCC,WAAA,E"},"metadata":{},"sourceType":"module","externalDependencies":[]}