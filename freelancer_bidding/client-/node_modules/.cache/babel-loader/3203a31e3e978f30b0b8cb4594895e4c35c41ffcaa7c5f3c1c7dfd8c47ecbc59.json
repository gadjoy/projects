{"ast":null,"code":"import { vModelText as _vModelText, createElementVNode as _createElementVNode, withDirectives as _withDirectives, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.searchQuery = $event),\n    placeholder: \"Search Query\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.searchQuery]]), _createElementVNode(\"button\", {\n    onClick: _cache[1] || (_cache[1] = (...args) => $options.search && $options.search(...args))\n  }, \"Search\"), _createElementVNode(\"ul\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.projects, project => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: project.id\n    }, _toDisplayString(project.name), 1 /* TEXT */);\n  }), 128 /* KEYED_FRAGMENT */))])]);\n}","map":{"version":3,"names":["_createElementBlock","_createElementVNode","type","_cache","$event","$data","searchQuery","placeholder","onClick","args","$options","search","_Fragment","_renderList","projects","project","key","id","name"],"sources":["/home/waseem/project/freelancer_bidding_automation/client-/src/App.vue"],"sourcesContent":["<template>\n  <div>\n    <input type=\"text\" v-model=\"searchQuery\" placeholder=\"Search Query\">\n    <button @click=\"search\">Search</button>\n    <ul>\n      <li v-for=\"project in projects\" :key=\"project.id\">{{ project.name }}</li>\n    </ul>\n  </div>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      searchQuery: '',\n      projects: []\n    }\n  },\n  methods: {\n    search() {\n      const url = `http://127.0.0.1:5000/search_projects?query=${this.searchQuery}&limit=10`;\n      fetch(url)\n        .then(response => response.json())\n        .then(data => {\n          this.projects = data;\n        })\n        .catch(error => {\n          console.error('Error fetching data:', error);\n        });\n    }\n  }\n}\n</script>\n"],"mappings":";;uBACEA,mBAAA,CAMM,c,gBALJC,mBAAA,CAAoE;IAA7DC,IAAI,EAAC,MAAM;IAFtB,uBAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAEgCC,KAAA,CAAAC,WAAW,GAAAF,MAAA;IAAEG,WAAW,EAAC;iDAAzBF,KAAA,CAAAC,WAAW,E,GACvCL,mBAAA,CAAuC;IAA9BO,OAAK,EAAAL,MAAA,QAAAA,MAAA,UAAAM,IAAA,KAAEC,QAAA,CAAAC,MAAA,IAAAD,QAAA,CAAAC,MAAA,IAAAF,IAAA,CAAM;KAAE,QAAM,GAC9BR,mBAAA,CAEK,c,kBADHD,mBAAA,CAAyEY,SAAA,QAL/EC,WAAA,CAK4BR,KAAA,CAAAS,QAAQ,EAAnBC,OAAO;yBAAlBf,mBAAA,CAAyE;MAAxCgB,GAAG,EAAED,OAAO,CAACE;wBAAOF,OAAO,CAACG,IAAI"},"metadata":{},"sourceType":"module","externalDependencies":[]}