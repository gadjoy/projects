{"ast":null,"code":"import axios from 'axios';\nexport default {\n  data() {\n    return {\n      query: '',\n      searchLimit: '',\n      projects: [],\n      selectedProjects: [],\n      bidAmounts: {},\n      backendUrl: 'http://127.0.0.1:5000',\n      preview: null,\n      projectHeaders: ['_id', '_title', '_full_description', '_budget_minimum', '_budget_maximum', '_type', '_bidperiod', '_time_submitted', '_bid_stats_bid_count', '_bid_stats_bid_avg', '_currency_code', '_currency_exchange_rate', '_proposal'],\n      loading: false // Add loading state\n    };\n  },\n  methods: {\n    async fetchProjects() {\n      this.loading = true; // Set loading to true when fetching projects\n      try {\n        const response = await axios.get(`${this.backendUrl}/api/projects`, {\n          params: {\n            query: this.query,\n            limit: this.searchLimit\n          },\n          withCredentials: true\n        });\n        this.projects = response.data.projects_with_proposals;\n      } catch (error) {\n        console.error('Error fetching projects:', error);\n      } finally {\n        this.loading = false; // Set loading to false when done fetching projects\n      }\n    }\n    // Other methods...\n  }\n};","map":{"version":3,"names":["axios","data","query","searchLimit","projects","selectedProjects","bidAmounts","backendUrl","preview","projectHeaders","loading","methods","fetchProjects","response","get","params","limit","withCredentials","projects_with_proposals","error","console"],"sources":["/home/waseem/project/freelancer_bidding_automation/client-/src/App.vue"],"sourcesContent":["<template>\n  <div>\n    <h1>FREELANCER AUTO BIDDING</h1>\n\n    <!-- Spinner -->\n    <div v-if=\"loading\" class=\"spinner-container\">\n      <!-- Add your spinner component here -->\n      <div class=\"spinner\"></div>\n    </div>\n\n    <!-- Search Form -->\n    <div v-else>\n      <label for=\"query\">Query:</label>\n      <input v-model=\"query\" type=\"text\" id=\"query\" />\n      <label for=\"searchLimit\">Search Limit:</label>\n      <input v-model.number=\"searchLimit\" type=\"number\" id=\"searchLimit\" />\n      <button @click=\"fetchProjects\">Search</button>\n    </div>\n\n    <!-- Projects Table -->\n    <div v-if=\"projects.length > 0\">\n      <!-- Add your projects table here -->\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios';\n\nexport default {\n  data() {\n    return {\n      query: '',\n      searchLimit: '',\n      projects: [],\n      selectedProjects: [],\n      bidAmounts: {},\n      backendUrl: 'http://127.0.0.1:5000',\n      preview: null,\n      projectHeaders: [\n        '_id',\n        '_title',\n        '_full_description',\n        '_budget_minimum',\n        '_budget_maximum',\n        '_type',\n        '_bidperiod',\n        '_time_submitted',\n        '_bid_stats_bid_count',\n        '_bid_stats_bid_avg',\n        '_currency_code',\n        '_currency_exchange_rate',\n        '_proposal'\n      ],\n      loading: false, // Add loading state\n    };\n  },\n  methods: {\n    async fetchProjects() {\n      this.loading = true; // Set loading to true when fetching projects\n      try {\n        const response = await axios.get(`${this.backendUrl}/api/projects`, {\n          params: {\n            query: this.query,\n            limit: this.searchLimit,\n          },\n          withCredentials: true,\n        });\n\n        this.projects = response.data.projects_with_proposals;\n\n      } catch (error) {\n        console.error('Error fetching projects:', error);\n      } finally {\n        this.loading = false; // Set loading to false when done fetching projects\n      }\n    },\n    // Other methods...\n  },\n};\n</script>\n\n<style scoped>\n/* Add spinner styles */\n.spinner-container {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 200px; /* Adjust height as needed */\n}\n\n.spinner {\n  border: 8px solid rgba(0, 0, 0, 0.1);\n  border-left-color: #4CAF50; /* Adjust spinner color */\n  border-radius: 50%;\n  width: 50px;\n  height: 50px;\n  animation: spin 1s linear infinite;\n}\n\n@keyframes spin {\n  to {\n    transform: rotate(360deg);\n  }\n}\n</style>\n"],"mappings":"AA2BA,OAAOA,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,KAAK,EAAE,EAAE;MACTC,WAAW,EAAE,EAAE;MACfC,QAAQ,EAAE,EAAE;MACZC,gBAAgB,EAAE,EAAE;MACpBC,UAAU,EAAE,CAAC,CAAC;MACdC,UAAU,EAAE,uBAAuB;MACnCC,OAAO,EAAE,IAAI;MACbC,cAAc,EAAE,CACd,KAAK,EACL,QAAQ,EACR,mBAAmB,EACnB,iBAAiB,EACjB,iBAAiB,EACjB,OAAO,EACP,YAAY,EACZ,iBAAiB,EACjB,sBAAsB,EACtB,oBAAoB,EACpB,gBAAgB,EAChB,yBAAyB,EACzB,WAAU,CACX;MACDC,OAAO,EAAE,KAAK,CAAE;IAClB,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACP,MAAMC,aAAaA,CAAA,EAAG;MACpB,IAAI,CAACF,OAAM,GAAI,IAAI,EAAE;MACrB,IAAI;QACF,MAAMG,QAAO,GAAI,MAAMb,KAAK,CAACc,GAAG,CAAE,GAAE,IAAI,CAACP,UAAW,eAAc,EAAE;UAClEQ,MAAM,EAAE;YACNb,KAAK,EAAE,IAAI,CAACA,KAAK;YACjBc,KAAK,EAAE,IAAI,CAACb;UACd,CAAC;UACDc,eAAe,EAAE;QACnB,CAAC,CAAC;QAEF,IAAI,CAACb,QAAO,GAAIS,QAAQ,CAACZ,IAAI,CAACiB,uBAAuB;MAEvD,EAAE,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;MAClD,UAAU;QACR,IAAI,CAACT,OAAM,GAAI,KAAK,EAAE;MACxB;IACF;IACA;EACF;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}